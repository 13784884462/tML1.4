--- src/Terraria\Terraria.GameInput\PlayerInput.cs
+++ src/tModLoader\Terraria.GameInput\PlayerInput.cs
@@ -8,6 +_,7 @@
 using Terraria.GameContent.UI.States;
 using Terraria.ID;
 using Terraria.IO;
+using Terraria.ModLoader;
 using Terraria.Social;
 using Terraria.UI;
 using Terraria.UI.Gamepad;
@@ -25,6 +_,9 @@
 		public static List<string> KnownTriggers = new List<string> {
 			"MouseLeft",
 			"MouseRight",
+			"MouseMiddle",
+			"MouseXButton1",
+			"MouseXButton2",
 			"Up",
 			"Down",
 			"Left",
@@ -287,6 +_,44 @@
 			}
 		}
 
+		// To allow mod hotkeys to load, need to reinitialize after load.
+		internal static bool reinitialize;
+		private static void ReInitialize() {
+			Profiles.Clear();
+			OriginalProfiles.Clear();
+			PlayerInputProfile playerInputProfile = new PlayerInputProfile("Redigit's Pick");
+			playerInputProfile.Initialize(PresetProfiles.Redigit);
+			Profiles.Add(playerInputProfile.Name, playerInputProfile);
+			playerInputProfile = new PlayerInputProfile("Yoraiz0r's Pick");
+			playerInputProfile.Initialize(PresetProfiles.Yoraiz0r);
+			Profiles.Add(playerInputProfile.Name, playerInputProfile);
+			playerInputProfile = new PlayerInputProfile("Console (Playstation)");
+			playerInputProfile.Initialize(PresetProfiles.ConsolePS);
+			Profiles.Add(playerInputProfile.Name, playerInputProfile);
+			playerInputProfile = new PlayerInputProfile("Console (Xbox)");
+			playerInputProfile.Initialize(PresetProfiles.ConsoleXBox);
+			Profiles.Add(playerInputProfile.Name, playerInputProfile);
+			playerInputProfile = new PlayerInputProfile("Custom");
+			playerInputProfile.Initialize(PresetProfiles.Redigit);
+			Profiles.Add(playerInputProfile.Name, playerInputProfile);
+			playerInputProfile = new PlayerInputProfile("Redigit's Pick");
+			playerInputProfile.Initialize(PresetProfiles.Redigit);
+			OriginalProfiles.Add(playerInputProfile.Name, playerInputProfile);
+			playerInputProfile = new PlayerInputProfile("Yoraiz0r's Pick");
+			playerInputProfile.Initialize(PresetProfiles.Yoraiz0r);
+			OriginalProfiles.Add(playerInputProfile.Name, playerInputProfile);
+			playerInputProfile = new PlayerInputProfile("Console (Playstation)");
+			playerInputProfile.Initialize(PresetProfiles.ConsolePS);
+			OriginalProfiles.Add(playerInputProfile.Name, playerInputProfile);
+			playerInputProfile = new PlayerInputProfile("Console (Xbox)");
+			playerInputProfile.Initialize(PresetProfiles.ConsoleXBox);
+			OriginalProfiles.Add(playerInputProfile.Name, playerInputProfile);
+			Triggers.Initialize(); // Populates triggers with known hotkeys
+			SetSelectedProfile("Custom");
+			Load(); // Loads the JSON into the Profiles above
+			reinitialize = false;
+		}
+
 		public static void Initialize() {
 			Main.InputProfiles.OnProcessText += new Preferences.TextProcessAction(PrettyPrintProfiles);
 			Player.Hooks.OnEnterWorld += new Action<Player>(Hook_OnEnterWorld);
@@ -337,7 +_,9 @@
 		}
 
 		public static void Load() {
-			Main.InputProfiles.Load();
+			if (!Main.InputProfiles.Load())
+				return; // fixes strange bug caused by deleting input profiles.json in game and reloading mods.
+
 			Dictionary<string, PlayerInputProfile> dictionary = new Dictionary<string, PlayerInputProfile>();
 			string text = null;
 			Main.InputProfiles.Get("Selected Profile", ref text);
@@ -427,6 +_,9 @@
 		}
 
 		public static void UpdateInput() {
+			if (reinitialize)
+				ReInitialize();
+
 			Triggers.Reset();
 			ScrollWheelValueOld = ScrollWheelValue;
 			ScrollWheelValue = 0;
@@ -458,6 +_,9 @@
 			UpdateMainMouse();
 			Main.mouseLeft = Triggers.Current.MouseLeft;
 			Main.mouseRight = Triggers.Current.MouseRight;
+			Main.mouseMiddle = Triggers.Current.MouseMiddle;
+			Main.mouseXButton1 = Triggers.Current.MouseXButton1;
+			Main.mouseXButton2 = Triggers.Current.MouseXButton2;
 			CacheZoomableValues();
 		}
 
@@ -643,6 +_,8 @@
 				flag = true;
 			}
 
+			// We might just need a bool for while reloading.
+			if (player.inventory[player.selectedItem].type >= ItemID.Sets.GamepadWholeScreenUseRange.Length) return;
 			bool flag4 = ItemID.Sets.GamepadWholeScreenUseRange[player.inventory[player.selectedItem].type] || player.scope;
 			int num3 = player.inventory[player.selectedItem].tileBoost + ItemID.Sets.GamepadExtraRange[player.inventory[player.selectedItem].type];
 			if (player.yoyoString && ItemID.Sets.Yoyo[player.inventory[player.selectedItem].type])
@@ -895,6 +_,9 @@
 			List<string> list = new List<string> {
 				"MouseLeft",
 				"MouseRight",
+				"MouseMiddle",
+				"MouseXButton1",
+				"MouseXButton2",
 				"Inventory"
 			};
 
@@ -1047,7 +_,7 @@
 					if (DpadSnapCooldown[i] == 0) {
 						int num = 6;
 						if (ItemSlot.IsABuildingItem(player.inventory[player.selectedItem]))
-							num = player.inventory[player.selectedItem].useTime;
+							num = PlayerHooks.TotalUseTime(player.inventory[player.selectedItem].useTime, player, player.inventory[player.selectedItem]);
 
 						DpadSnapCooldown[i] = num;
 						value += value2;
@@ -1275,6 +_,9 @@
 						case InputMode.Keyboard:
 							c.KeyStatus["MouseLeft"].Add("Mouse1");
 							c.KeyStatus["MouseRight"].Add("Mouse2");
+							c.KeyStatus["MouseMiddle"].Add("Mouse3");
+							c.KeyStatus["MouseXButton1"].Add("Mouse4");
+							c.KeyStatus["MouseXButton2"].Add("Mouse5");
 							c.KeyStatus["Up"].Add("W");
 							c.KeyStatus["Down"].Add("S");
 							c.KeyStatus["Left"].Add("A");
@@ -1311,6 +_,9 @@
 							c.KeyStatus["MouseLeft"].Add("Mouse1");
 							c.KeyStatus["MouseLeft"].Add("Space");
 							c.KeyStatus["MouseRight"].Add("Mouse2");
+							c.KeyStatus["MouseMiddle"].Add("Mouse3");
+							c.KeyStatus["MouseXButton1"].Add("Mouse4");
+							c.KeyStatus["MouseXButton2"].Add("Mouse5");
 							c.KeyStatus["Up"].Add("W");
 							c.KeyStatus["Up"].Add("Up");
 							c.KeyStatus["Down"].Add("S");
@@ -1384,6 +_,9 @@
 						case InputMode.Keyboard:
 							c.KeyStatus["MouseLeft"].Add("Mouse1");
 							c.KeyStatus["MouseRight"].Add("Mouse2");
+							c.KeyStatus["MouseMiddle"].Add("Mouse3");
+							c.KeyStatus["MouseXButton1"].Add("Mouse4");
+							c.KeyStatus["MouseXButton2"].Add("Mouse5");
 							c.KeyStatus["Up"].Add("W");
 							c.KeyStatus["Down"].Add("S");
 							c.KeyStatus["Left"].Add("A");
@@ -1420,6 +_,9 @@
 							c.KeyStatus["MouseLeft"].Add("Mouse1");
 							c.KeyStatus["MouseLeft"].Add("Space");
 							c.KeyStatus["MouseRight"].Add("Mouse2");
+							c.KeyStatus["MouseMiddle"].Add("Mouse3");
+							c.KeyStatus["MouseXButton1"].Add("Mouse4");
+							c.KeyStatus["MouseXButton2"].Add("Mouse5");
 							c.KeyStatus["Up"].Add("W");
 							c.KeyStatus["Up"].Add("Up");
 							c.KeyStatus["Down"].Add("S");
@@ -1492,6 +_,9 @@
 						case InputMode.Keyboard:
 							c.KeyStatus["MouseLeft"].Add("Mouse1");
 							c.KeyStatus["MouseRight"].Add("Mouse2");
+							c.KeyStatus["MouseMiddle"].Add("Mouse3");
+							c.KeyStatus["MouseXButton1"].Add("Mouse4");
+							c.KeyStatus["MouseXButton2"].Add("Mouse5");
 							c.KeyStatus["Up"].Add("W");
 							c.KeyStatus["Down"].Add("S");
 							c.KeyStatus["Left"].Add("A");
@@ -1528,6 +_,9 @@
 							c.KeyStatus["MouseLeft"].Add("Mouse1");
 							c.KeyStatus["MouseLeft"].Add("Space");
 							c.KeyStatus["MouseRight"].Add("Mouse2");
+							c.KeyStatus["MouseMiddle"].Add("Mouse3");
+							c.KeyStatus["MouseXButton1"].Add("Mouse4");
+							c.KeyStatus["MouseXButton2"].Add("Mouse5");
 							c.KeyStatus["Up"].Add("W");
 							c.KeyStatus["Up"].Add("Up");
 							c.KeyStatus["Down"].Add("S");
@@ -1600,6 +_,9 @@
 						case InputMode.Keyboard:
 							c.KeyStatus["MouseLeft"].Add("Mouse1");
 							c.KeyStatus["MouseRight"].Add("Mouse2");
+							c.KeyStatus["MouseMiddle"].Add("Mouse3");
+							c.KeyStatus["MouseXButton1"].Add("Mouse4");
+							c.KeyStatus["MouseXButton2"].Add("Mouse5");
 							c.KeyStatus["Up"].Add("W");
 							c.KeyStatus["Down"].Add("S");
 							c.KeyStatus["Left"].Add("A");
@@ -1636,6 +_,9 @@
 							c.KeyStatus["MouseLeft"].Add("Mouse1");
 							c.KeyStatus["MouseLeft"].Add("Space");
 							c.KeyStatus["MouseRight"].Add("Mouse2");
+							c.KeyStatus["MouseMiddle"].Add("Mouse3");
+							c.KeyStatus["MouseXButton1"].Add("Mouse4");
+							c.KeyStatus["MouseXButton2"].Add("Mouse5");
 							c.KeyStatus["Up"].Add("W");
 							c.KeyStatus["Up"].Add("Up");
 							c.KeyStatus["Down"].Add("S");
