--- src/Terraria/Terraria.Graphics.Light/LegacyLighting.cs
+++ src/tModLoader/Terraria.Graphics.Light/LegacyLighting.cs
@@ -6,5 +_,6 @@
 using Terraria.DataStructures;
 using Terraria.Utilities;
+using Terraria.ModLoader;
 
 namespace Terraria.Graphics.Light
 {
@@ -91,7 +_,7 @@
 		private int _firstToLightY;
 		private int _lastToLightX;
 		private int _lastToLightY;
-		private float _negLight = 0.04f;
+		internal float _negLight = 0.04f;
 		private float _negLight2 = 0.16f;
 		private float _wetLightR = 0.16f;
 		private float _wetLightG = 0.16f;
@@ -99,7 +_,7 @@
 		private float _honeyLightR = 0.16f;
 		private float _honeyLightG = 0.16f;
 		private float _honeyLightB = 0.16f;
-		private float _blueWave = 1f;
+		internal float _blueWave = 1f;
 		private int _blueDir = 1;
 		private int _minX7;
 		private int _maxX7;
@@ -513,6 +_,7 @@
 			}
 
 			Main.player[Main.myPlayer].hasBanner = false;
+			WorldHooks.ResetNearbyTileEffects();
 			int[] screenTileCounts = Main.screenTileCounts;
 			Array.Clear(screenTileCounts, 0, screenTileCounts.Length);
 			num4 = Utils.Clamp(firstToLightX, 5, Main.maxTilesX - 1);
@@ -558,6 +_,7 @@
 			_tileScanner.ExportTo(new Rectangle(num, num3, num2 - num, num4 - num3), _lightMap);
 			for (int m = num; m < num2; m++) {
 				LightingState[] array3 = _states[m - _firstToLightX];
+				//patch file: n, num17
 				for (int n = num3; n < num4; n++) {
 					LightingState lightingState2 = array3[n - _firstToLightY];
 					Tile tile = Main.tile[m, n];
@@ -737,7 +_,9 @@
 							break;
 					}
 
+					WallLoader.ModifyLight(n, num17, tile.wall, ref num18, ref num19, ref num20);
 					if (tile.active()) {
+						bool closer = false;
 						if (n > num4 + num15 && n < num5 - num15 && num17 > num6 + num16 && num17 < num7 - num16) {
 							screenTileCounts[tile.type]++;
 							if (tile.type == 215 && tile.frameY < 36)
@@ -738,6 +_,8 @@
 							_wetLightB = 0f;
 							break;
 					}
+
+					WaterStyleLoader.LightColorMultiplier(Main.waterStyle, ref _wetLightR, ref _wetLightG, ref _wetLightB);
 				}
 				else {
 					_negLight = 0.9f;
@@ -764,6 +_,8 @@
 					_negLight *= 0.85f;
 					_negLight2 *= 0.85f;
 				}
+
+				ModHooks.ModifyLightingBrightness(ref _negLight, ref _negLight2);
 			}
 			else {
 				_negLight = 0.04f;
@@ -765,6 +_,8 @@
 									Main.player[Main.myPlayer].hasBanner = true;
 								}
 							}
+
+							closer = true;
 						}
 
 						switch (tile.type) {
@@ -788,6 +_,7 @@
 					_negLight2 += 0.18f;
 				}
 
+				ModHooks.ModifyLightingBrightness(ref _negLight, ref _negLight2);
 				_wetLightR = _negLight * 1.2f;
 				_wetLightG = _negLight * 1.1f;
 			}
@@ -811,6 +_,10 @@
 								break;
 						}
 
+						if (TileLoader.IsModMusicBox(tile) && tile.frameX >= 36)
+							Main.musicBox = SoundLoader.tileToMusic[tile.type][tile.frameY / 36 * 36];
+
+						TileLoader.NearbyEffects(n, num17, tile.type, closer);
 						if (Main.tileBlockLight[tile.type] && (lightMode >= 2 || (tile.type != 131 && !tile.inActive() && tile.slope() == 0)))
 							lightingState2.stopLight = true;
 
@@ -1967,13 +_,17 @@
 						}
 					}
 
+					TileLoader.ModifyLight(n, num17, tile.type, ref num18, ref num19, ref num20);
+
 					if (RGB) {
 						if (lightingState2.r2 < num18)
 							lightingState2.r2 = num18;
 
+						//patch file: num18, num19
 						if (lightingState2.g2 < num19)
 							lightingState2.g2 = num19;
 
+						//patch file: num19, num20
 						if (lightingState2.b2 < num20)
 							lightingState2.b2 = num20;
 					}
@@ -2076,12 +_,13 @@
 			Main.partyMonoliths = screenTileCounts[455];
 			if (Main.player[Main.myPlayer].accOreFinder) {
 				Main.player[Main.myPlayer].bestOre = -1;
-				for (int num58 = 0; num58 < 470; num58++) {
+				for (int num58 = 0; num58 < Main.tileValue.Length; num58++) {
 					if (screenTileCounts[num58] > 0 && Main.tileValue[num58] > 0 && (Main.player[Main.myPlayer].bestOre < 0 || Main.tileValue[num58] > Main.tileValue[Main.player[Main.myPlayer].bestOre]))
 						Main.player[Main.myPlayer].bestOre = num58;
 				}
 			}
 
+			WorldHooks.TileCountsAvailable(screenTileCounts);
 			if (Main.holyTiles < 0)
 				Main.holyTiles = 0;
 
