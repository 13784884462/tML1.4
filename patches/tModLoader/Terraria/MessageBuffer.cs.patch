--- src/Terraria/Terraria/MessageBuffer.cs
+++ src/tModLoader/Terraria/MessageBuffer.cs
@@ -18,7 +_,10 @@
 using Terraria.Localization;
 using Terraria.Net;
 using Terraria.Testing;
 using Terraria.UI;
+using Terraria.ModLoader;
+using Terraria.ModLoader.Exceptions;
+using Terraria.ModLoader.IO;
 
 namespace Terraria
 {
@@ -83,13 +_,13 @@
 			int num = 0;
 			num = start + 1;
 			b = (byte)(messageType = readBuffer[start]);
-			if (b >= 140)
-				return;
-
 			Main.rxMsg++;
 			Main.rxData += length;
+			if (b < Main.maxMsg) {
-			Main.rxMsgType[b]++;
+				Main.rxMsgType[b]++;
-			Main.rxDataType[b] += length;
+				Main.rxDataType[b] += length;
+			}
+
 			if (Main.netMode == 1 && Netplay.Connection.StatusMax > 0)
 				Netplay.Connection.StatusCount++;
 
@@ -107,14 +_,17 @@
 				return;
 			}
 
-			if (Main.netMode == 2 && Netplay.Clients[whoAmI].State < 10 && b > 12 && b != 93 && b != 16 && b != 42 && b != 50 && b != 38 && b != 68)
+			if (Main.netMode == 2 && Netplay.Clients[whoAmI].State < 10 && b > 12 && b != 93 && b != 16 && b != 42 && b != 50 && b != 38 && b != 68 && b < 250)
 				NetMessage.BootPlayer(whoAmI, Lang.mp[2].ToNetworkText());
 
 			if (reader == null)
 				ResetReader();
 
 			reader.BaseStream.Position = num;
 			NPCSpawnParams spawnparams;
+			if (ModNet.HijackGetData(ref b, ref reader, whoAmI))
+				return;
+
 			switch (b) {
 				case 15:
 				case 25:
@@ -135,9 +_,15 @@
 						if (Netplay.Clients[whoAmI].State != 0)
 							break;
 
-						if (reader.ReadString() == "Terraria" + 226) {
+						string clientVersion = reader.ReadString();
+						ModNet.isModdedClient[whoAmI] = clientVersion == ModLoader.ModLoader.versionedName;
+						if (ModNet.isModdedClient[whoAmI] || clientVersion == "Terraria" + 194 && ModNet.AllowVanillaClients) {
 							if (string.IsNullOrEmpty(Netplay.ServerPassword)) {
 								Netplay.Clients[whoAmI].State = 1;
+								if (ModNet.isModdedClient[whoAmI]) {
+									ModNet.SyncMods(whoAmI);
+									return;
+								}
 								NetMessage.TrySendData(3, whoAmI);
 							}
 							else {
@@ -146,7 +_,10 @@
 							}
 						}
 						else {
-							NetMessage.TrySendData(2, whoAmI, -1, Lang.mp[4].ToNetworkText());
+							if (clientVersion.StartsWith("tModLoader"))
+								NetMessage.SendData(2, whoAmI, -1, NetworkText.FromLiteral(Lang.mp[4].Value + $"\n(You are on {clientVersion}, server is on {ModLoader.ModLoader.versionedName})"));
+							else
+								NetMessage.SendData(2, whoAmI, -1, NetworkText.FromLiteral(Lang.mp[4].Value + "\n(You cannot connect to a tModLoader Server with an unmodded client.)"));
 						}
 					}
 					break;
@@ -212,6 +_,7 @@
 							NetMessage.TrySendData(5, -1, -1, null, num117, 58 + player8.armor.Length + player8.dye.Length + player8.miscEquips.Length + player8.miscDyes.Length + player8.bank.item.Length + player8.bank2.item.Length + player8.bank3.item.Length + 2 + num126, (int)player8.bank4.item[num126].prefix);
 						}
 
+						PlayerHooks.SyncPlayer(player8, -1, -1, true);
 						NetMessage.TrySendData(6);
 						if (Netplay.Connection.State == 2)
 							Netplay.Connection.State = 3;
@@ -374,8 +_,9 @@
 								player12.trashItem.netDefaults(type13);
 								player12.trashItem.stack = stack6;
 								player12.trashItem.Prefix(num213);
 								if (num211 == Main.myPlayer && !Main.ServerSideCharacter)
 									Main.clientPlayer.trashItem = player12.trashItem.Clone();
+								ItemIO.ReceiveModData(player12.trashItem, reader);
 							}
 							else if (num212 <= 58) {
 								int type14 = array3[num214].type;
@@ -384,6 +_,7 @@
 								array3[num214].netDefaults(type13);
 								array3[num214].stack = stack6;
 								array3[num214].Prefix(num213);
+								ItemIO.ReceiveModData(array3[num214], reader);
 								if (num211 == Main.myPlayer && !Main.ServerSideCharacter)
 									array4[num214] = array3[num214].Clone();
 
@@ -403,8 +_,9 @@
 								array3[num214].netDefaults(type13);
 								array3[num214].stack = stack6;
 								array3[num214].Prefix(num213);
 								if (num211 == Main.myPlayer && !Main.ServerSideCharacter)
 									array4[num214] = array3[num214].Clone();
+								ItemIO.ReceiveModData(array3[num214], reader);
 							}
 
 							if (Main.netMode == 2 && num211 == whoAmI && num212 <= 58 + player12.armor.Length + player12.dye.Length + player12.miscEquips.Length + player12.miscDyes.Length)
@@ -555,6 +_,9 @@
 							Main.StopSlimeRain();
 
 						Main.invasionType = reader.ReadSByte();
+						if (!ModNet.AllowVanillaClients)
+							WorldIO.ReceiveModData(reader);
+
 						Main.LobbyId = reader.ReadUInt64();
 						Sandstorm.IntendedSeverity = reader.ReadSingle();
 						if (Netplay.Connection.State == 3) {
@@ -688,6 +_,9 @@
 							NetMessage.TrySendData(83, whoAmI, -1, null, num178);
 						}
 
+						for (int type = NPCID.Count; type < NPCLoader.NPCCount; type++)
+							NetMessage.SendData(83, whoAmI, -1, null, type, 0f, 0f, 0f, 0, 0, 0);
+
 						NetMessage.TrySendData(49, whoAmI);
 						NetMessage.TrySendData(57, whoAmI);
 						NetMessage.TrySendData(7, whoAmI);
@@ -1135,9 +_,9 @@
 
 							int num206 = num203;
 							Item item2 = Main.item[num206];
 							ItemSyncPersistentStats itemSyncPersistentStats = default(ItemSyncPersistentStats);
 							itemSyncPersistentStats.CopyFrom(item2);
-							bool newAndShiny = (item2.newAndShiny || item2.netID != num205) && ItemSlot.Options.HighlightNewItems && (num205 < 0 || num205 >= 5043 || !ItemID.Sets.NeverAppearsAsNewInInventory[num205]);
+							bool newAndShiny = (item2.newAndShiny || item2.netID != num205) && ItemSlot.Options.HighlightNewItems && (num205 < 0 || !ItemID.Sets.NeverAppearsAsNewInInventory[num205]);
 							item2.netDefaults(num205);
 							item2.newAndShiny = newAndShiny;
 							item2.Prefix(pre2);
@@ -1145,6 +_,7 @@
 							item2.position = position3;
 							item2.velocity = velocity5;
 							item2.active = true;
+							ItemIO.ReceiveModData(item2, reader);
 							if (b == 90) {
 								item2.instanced = true;
 								item2.playerIndexTheItemIsReservedFor = Main.myPlayer;
@@ -1184,6 +_,7 @@
 							obj6.position = position3;
 							obj6.velocity = velocity5;
 							obj6.active = true;
+							ItemIO.ReceiveModData(obj6, reader);
 							obj6.playerIndexTheItemIsReservedFor = Main.myPlayer;
 							if (flag10) {
 								NetMessage.TrySendData(21, -1, -1, null, num203);
@@ -1314,9 +_,10 @@
 						if (num48 == 245)
 							NPC.golemBoss = num45;
 
-						if (nPC2.type >= 0 && nPC2.type < 663 && Main.npcCatchable[nPC2.type])
+						if (nPC2.type >= 0 && nPC2.type < NPCLoader.NPCCount && Main.npcCatchable[nPC2.type])
 							nPC2.releaseOwner = reader.ReadByte();
 
+						NPCLoader.ReceiveExtraAI(nPC2, reader);
 						break;
 					}
 				case 24: {
@@ -1356,6 +_,7 @@
 						if (num135 >= 1000)
 							num135 = -1;
 
+						byte[] extraAI = ProjectileLoader.ReadExtraAI(reader, bitsByte16);
 						if (Main.netMode == 2) {
 							num132 = whoAmI;
 							if (Main.projHostile[num133])
@@ -1406,6 +_,7 @@
 							Main.projectileIdentity[num132, num135] = num136;
 						}
 
+						ProjectileLoader.ReceiveExtraAI(projectile, extraAI);
 						projectile.ProjectileFixDesperation();
 						if (Main.netMode == 2)
 							NetMessage.TrySendData(27, -1, whoAmI, null, num136);
@@ -1414,7 +_,7 @@
 					}
 				case 28: {
 						int num3 = reader.ReadInt16();
-						int num4 = reader.ReadInt16();
+						int num4 = ModNet.AllowVanillaClients ? reader.ReadInt16() : reader.ReadInt32();
 						float num5 = reader.ReadSingle();
 						int num6 = reader.ReadByte() - 1;
 						byte b2 = reader.ReadByte();
@@ -1529,8 +_,9 @@
 							Main.chest[num260].item[num261].netDefaults(type17);
 							Main.chest[num260].item[num261].Prefix(pre3);
 							Main.chest[num260].item[num261].stack = stack8;
+							ItemIO.ReceiveModData(Main.chest[num260].item[num261], reader);
 							Recipe.FindRecipes(canDelayCheck: true);
 						}
 
 						break;
 					}
@@ -1586,6 +_,7 @@
 						break;
 					}
 				case 34: {
+						// TODO, check that this didn't get messed up...why % 100?
 						byte b3 = reader.ReadByte();
 						int num15 = reader.ReadInt16();
 						int num16 = reader.ReadInt16();
@@ -1594,22 +_,32 @@
 						if (Main.netMode == 2)
 							num18 = 0;
 
+
+						ushort modType = 0;
+						if (b3 >= 100)
+							modType = reader.ReadUInt16();
+
 						if (Main.netMode == 2) {
 							switch (b3) {
-								case 0: {
-										int num19 = WorldGen.PlaceChest(num15, num16, 21, notNearOtherChests: false, num17);
+								case byte _ when b3 % 100 == 0: {
+										if (modType == 0)
+											modType = TileID.Containers;
+
+										int num19 = WorldGen.PlaceChest(num15, num26, modType, notNearOtherChests: false, num17);
 										if (num19 == -1) {
-											NetMessage.TrySendData(34, whoAmI, -1, null, b3, num15, num16, num17, num19);
-											Item.NewItem(num15 * 16, num16 * 16, 32, 32, Chest.chestItemSpawn[num17], 1, noBroadcast: true);
+											NetMessage.TrySendData(34, whoAmI, -1, null, b3, num15, num16, num17, num19, modType);
+											int itemSpawn = b3 < 100 ? Chest.chestItemSpawn[num17] : TileLoader.GetTile(modType).chestDrop;
+											if (itemSpawn > 0)
+												Item.NewItem(num15 * 16, num16 * 16, 32, 32, itemSpawn, 1, noBroadcast: true);
 										}
 										else {
-											NetMessage.TrySendData(34, -1, -1, null, b3, num15, num16, num17, num19);
+											NetMessage.TrySendData(34, -1, -1, null, b3, num15, num16, num17, num19, modType);
 										}
 
 										return;
 									}
 								case 1:
-									if (Main.tile[num15, num16].type == 21) {
+									if (Main.tile[num15, num16].type == 21 || b3 == 101 && TileID.Sets.BasicChest[Main.tile[num15, num16].type]) {
 										Tile tile = Main.tile[num15, num16];
 										if (tile.frameX % 36 != 0)
 											num15--;
@@ -1628,20 +_,25 @@
 							}
 
 							switch (b3) {
-								case 2: {
-										int num20 = WorldGen.PlaceChest(num15, num16, 88, notNearOtherChests: false, num17);
+								case byte _ when b3 % 100 == 2: {
+										if (modType == 0)
+											modType = TileID.Dressers;
+
+										int num20 = WorldGen.PlaceChest(num15, num26, modType, notNearOtherChests: false, num17);
 										if (num20 == -1) {
-											NetMessage.TrySendData(34, whoAmI, -1, null, b3, num15, num16, num17, num20);
-											Item.NewItem(num15 * 16, num16 * 16, 32, 32, Chest.dresserItemSpawn[num17], 1, noBroadcast: true);
+											NetMessage.TrySendData(34, whoAmI, -1, null, b3, num15, num16, num17, num20, modType);
+											int itemSpawn = b3 < 100 ? Chest.dresserItemSpawn[num17] : TileLoader.GetTile(modType).dresserDrop;
+											if (itemSpawn > 0)
+												Item.NewItem(num15 * 16, num16 * 16, 32, 32, itemSpawn, 1, noBroadcast: true);
 										}
 										else {
-											NetMessage.TrySendData(34, -1, -1, null, b3, num15, num16, num17, num20);
+											NetMessage.TrySendData(34, -1, -1, null, b3, num15, num16, num17, num20, modType);
 										}
 
 										return;
 									}
 								case 3:
-									if (Main.tile[num15, num16].type == 88) {
+									if (Main.tile[num15, num16].type == 88 || b3 == 103 && TileLoader.IsDresser(Main.tile[num15, num16].type)) {
 										Tile tile2 = Main.tile[num15, num16];
 										num15 -= tile2.frameX % 54 / 18;
 										if (tile2.frameY % 36 != 0)
@@ -1691,21 +_,25 @@
 						}
 
 						switch (b3) {
-							case 0:
+							case byte _ when b3 % 100 == 0:
 								if (num18 == -1) {
 									WorldGen.KillTile(num15, num16);
 									break;
 								}
 								SoundEngine.PlaySound(0, num15 * 16, num16 * 16);
+								if (modType == 0)
+									modType = TileID.Containers;
-								WorldGen.PlaceChestDirect(num15, num16, 21, num17, num18);
+								WorldGen.PlaceChestDirect(num15, num16, modType, num17, num18);
 								break;
-							case 2:
+							case byte _ when b3 % 100 == 2:
 								if (num18 == -1) {
 									WorldGen.KillTile(num15, num16);
 									break;
 								}
 								SoundEngine.PlaySound(0, num15 * 16, num16 * 16);
+								if (modType == 0)
+									modType = TileID.Dressers;
-								WorldGen.PlaceDresserDirect(num15, num16, 88, num17, num18);
+								WorldGen.PlaceDresserDirect(num15, num16, modType, num17, num18);
 								break;
 							case 4:
 								if (num18 == -1) {
@@ -1747,6 +_,9 @@
 						obj7.zone2 = reader.ReadByte();
 						obj7.zone3 = reader.ReadByte();
 						obj7.zone4 = reader.ReadByte();
+						if (!ModNet.AllowVanillaClients)
+							PlayerHooks.ReceiveCustomBiomes(obj7, reader);
+
 						if (Main.netMode == 2)
 							NetMessage.TrySendData(36, -1, whoAmI, null, num226);
 
@@ -1768,6 +_,11 @@
 					if (Main.netMode == 2) {
 						if (reader.ReadString() == Netplay.ServerPassword) {
 							Netplay.Clients[whoAmI].State = 1;
+							if (ModNet.isModdedClient[whoAmI]) {
+								ModNet.SyncMods(whoAmI);
+								return;
+							}
+
 							NetMessage.TrySendData(3, whoAmI);
 						}
 						else {
@@ -1953,8 +_,7 @@
 							break;
 
 						Player player4 = Main.player[num40];
-						for (int num41 = 0; num41 < 22; num41++) {
+						for (int num41 = 0; num41 < Player.MaxBuffs; num41++) {
-							player4.buffType[num41] = reader.ReadUInt16();
 							if (player4.buffType[num41] > 0)
 								player4.buffTime[num41] = 60;
 							else
@@ -2441,6 +_,7 @@
 					break;
 				case 74:
 					if (Main.netMode == 1) {
+						Netplay.syncingWorld = false;
 						Main.anglerQuest = reader.ReadByte();
 						Main.anglerQuestFinished = reader.ReadBoolean();
 					}
@@ -2530,7 +_,7 @@
 					if (Main.netMode == 1) {
 						int num76 = reader.ReadInt16();
 						int num77 = reader.ReadInt32();
-						if (num76 >= 0 && num76 < 289)
+						if (num76 >= 0)// && num76 < 289) This prevented mod BannerIds from syncing.
 							NPC.killCount[num76] = num77;
 					}
 					break;
@@ -3313,7 +_,28 @@
 						bool flag = reader.ReadBoolean();
 						Main.countsAsHostForGameplay[num2] = flag;
 					}
 					break;
+				case MessageID.InGameChangeConfig:
+					ModLoader.Config.ConfigManager.HandleInGameChangeConfigPacket(reader, whoAmI);
+					return;
+				case MessageID.ModPacket:
+					ModNet.HandleModPacket(reader, whoAmI, length);
+					return;
+				case MessageID.SyncMods:
+					if (Main.netMode == 1) {
+						ModNet.SyncClientMods(reader);
+					}
+					else {
+						ModNet.SendNetIDs(whoAmI);
+						NetMessage.SendData(3, whoAmI);
+					}
+					return;
+				case MessageID.ModFile:
+					if (Main.netMode == 1)
+						ModNet.ReceiveMod(reader);
+					else
+						ModNet.SendMod(reader.ReadString(), whoAmI);
+					return;
 			}
 		}
 	}
