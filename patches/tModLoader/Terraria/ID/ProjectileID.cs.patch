--- src/Terraria/ID/ProjectileID.cs
+++ src/tModLoader/ID/ProjectileID.cs
@@ -1,5 +_,9 @@
 using Terraria.WorldBuilding;
 
+using ReLogic.Reflection;
+using System;
+using Terraria.ModLoader;
+
 namespace Terraria.ID
 {
 	public class ProjectileID
@@ -1210,5 +_,38 @@
 		public const short FlamingMace = 948;
 		public const short TorchGod = 949;
 		public const short Count = 950;
+		public static readonly IdDictionary Search = IdDictionary.Create<ProjectileID, short>();
+
+		public static string GetUniqueKey(int type) {
+			if (type < 0 || type >= ProjectileLoader.ProjectileCount)
+				throw new ArgumentOutOfRangeException("Invalid type: " + type);
+
+			if (type < Count)
+				return "Terraria " + Search.GetName(type);
+
+			var modProjectile = ProjectileLoader.GetProjectile(type);
+			return $"{modProjectile.mod.Name} {modProjectile.Name}";
+		}
+
+		public static string GetUniqueKey(Projectile projectile) => GetUniqueKey(projectile.type);
+
+		public static int TypeFromUniqueKey(string key) {
+			string[] parts = key.Split(new char[] { ' ' }, 2);
+			if (parts.Length != 2)
+				return 0;
+
+			return TypeFromUniqueKey(parts[0], parts[1]);
+		}
+
+		public static int TypeFromUniqueKey(string mod, string name) {
+			if (mod == "Terraria") {
+				if (!Search.ContainsName(name))
+					return 0;
+
+				return Search.GetId(name);
+			}
+
+			return ModLoader.ModLoader.GetMod(mod)?.ProjectileType(name) ?? 0;
+		}
 	}
 }
