--- src/Terraria/Terraria/Tile.cs
+++ src/tModLoader/Terraria/Tile.cs
@@ -9,12 +_,12 @@
 #if !WINDOWS
 	[StructLayout(LayoutKind.Sequential, Pack = 1)]
 #endif
-	public class Tile
+	public partial class Tile
 	{
 		public ushort type;
 		public ushort wall;
 		public byte liquid;
-		public short sTileHeader;
+		public ushort sTileHeader; //For easier bitwise manipulations
 		public byte bTileHeader;
 		public byte bTileHeader2;
 		public byte bTileHeader3;
@@ -257,27 +_,27 @@
 			bTileHeader = (byte)((bTileHeader & 0xE0) | wallColor);
 		}
 
-		public bool lava() => (bTileHeader & 0x20) == 32;
+		internal bool lava() => (bTileHeader & 0x20) == 32;
 
-		public void lava(bool lava) {
+		internal void lava(bool lava) {
 			if (lava)
 				bTileHeader = (byte)((bTileHeader & 0x9F) | 0x20);
 			else
 				bTileHeader &= 223;
 		}
 
-		public bool honey() => (bTileHeader & 0x40) == 64;
+		internal bool honey() => (bTileHeader & 0x40) == 64;
 
-		public void honey(bool honey) {
+		internal void honey(bool honey) {
 			if (honey)
 				bTileHeader = (byte)((bTileHeader & 0x9F) | 0x40);
 			else
 				bTileHeader &= 191;
 		}
 
-		public bool wire4() => (bTileHeader & 0x80) == 128;
+		internal bool wire4() => (bTileHeader & 0x80) == 128;
 
-		public void wire4(bool wire4) {
+		internal void wire4(bool wire4) {
 			if (wire4)
 				bTileHeader |= 128;
 			else
@@ -329,76 +_,76 @@
 		public byte color() => (byte)(sTileHeader & 0x1F);
 
 		public void color(byte color) {
-			sTileHeader = (short)((sTileHeader & 0xFFE0) | color);
+			sTileHeader = (ushort)((sTileHeader & 0xFFE0) | color);
 		}
 
-		public bool active() => (sTileHeader & 0x20) == 32;
+		internal bool active() => (sTileHeader & 0x20) == 32;
 
-		public void active(bool active) {
+		internal void active(bool active) {
 			if (active)
 				sTileHeader |= 32;
 			else
-				sTileHeader = (short)(sTileHeader & 0xFFDF);
+				sTileHeader = (ushort)(sTileHeader & 0xFFDF);
 		}
 
-		public bool inActive() => (sTileHeader & 0x40) == 64;
+		internal bool inActive() => (sTileHeader & 0x40) == 64;
 
-		public void inActive(bool inActive) {
+		internal void inActive(bool inActive) {
 			if (inActive)
 				sTileHeader |= 64;
 			else
-				sTileHeader = (short)(sTileHeader & 0xFFBF);
+				sTileHeader = (ushort)(sTileHeader & 0xFFBF);
 		}
 
-		public bool wire() => (sTileHeader & 0x80) == 128;
+		internal bool wire() => (sTileHeader & 0x80) == 128;
 
-		public void wire(bool wire) {
+		internal void wire(bool wire) {
 			if (wire)
 				sTileHeader |= 128;
 			else
-				sTileHeader = (short)(sTileHeader & 0xFF7F);
+				sTileHeader = (ushort)(sTileHeader & 0xFF7F);
 		}
 
-		public bool wire2() => (sTileHeader & 0x100) == 256;
+		internal bool wire2() => (sTileHeader & 0x100) == 256;
 
-		public void wire2(bool wire2) {
+		internal void wire2(bool wire2) {
 			if (wire2)
 				sTileHeader |= 256;
 			else
-				sTileHeader = (short)(sTileHeader & 0xFEFF);
+				sTileHeader = (ushort)(sTileHeader & 0xFEFF);
 		}
 
-		public bool wire3() => (sTileHeader & 0x200) == 512;
+		internal bool wire3() => (sTileHeader & 0x200) == 512;
 
-		public void wire3(bool wire3) {
+		internal void wire3(bool wire3) {
 			if (wire3)
 				sTileHeader |= 512;
 			else
-				sTileHeader = (short)(sTileHeader & 0xFDFF);
+				sTileHeader = (ushort)(sTileHeader & 0xFDFF);
 		}
 
-		public bool halfBrick() => (sTileHeader & 0x400) == 1024;
+		internal bool halfBrick() => (sTileHeader & 0x400) == 1024;
 
-		public void halfBrick(bool halfBrick) {
+		internal void halfBrick(bool halfBrick) {
 			if (halfBrick)
 				sTileHeader |= 1024;
 			else
-				sTileHeader = (short)(sTileHeader & 0xFBFF);
+				sTileHeader = (ushort)(sTileHeader & 0xFBFF);
 		}
 
-		public bool actuator() => (sTileHeader & 0x800) == 2048;
+		internal bool actuator() => (sTileHeader & 0x800) == 2048;
 
-		public void actuator(bool actuator) {
+		internal void actuator(bool actuator) {
 			if (actuator)
 				sTileHeader |= 2048;
 			else
-				sTileHeader = (short)(sTileHeader & 0xF7FF);
+				sTileHeader = (ushort)(sTileHeader & 0xF7FF);
 		}
 
 		public byte slope() => (byte)((sTileHeader & 0x7000) >> 12);
 
 		public void slope(byte slope) {
-			sTileHeader = (short)((sTileHeader & 0x8FFF) | ((slope & 7) << 12));
+			sTileHeader = (ushort)((sTileHeader & 0x8FFF) | ((slope & 7) << 12));
 		}
 
 		public void Clear(TileDataType types) {
