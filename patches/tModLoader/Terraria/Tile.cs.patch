--- src/Terraria\Terraria\Tile.cs
+++ src/tModLoader\Terraria\Tile.cs
@@ -19,9 +_,10 @@
 		public const int Liquid_Lava = 1;
 		public const int Liquid_Honey = 2;
 		public ushort type;
-		public byte wall;
+		public ushort wall;
 		public byte liquid;
+		// bitwise manipulations on signed values in C# apparently doesn't follow the C standards so the one unused bit in sTileHeader would have to have a unique way to access it.
-		public short sTileHeader;
+		public ushort sTileHeader;
 		public byte bTileHeader;
 		public byte bTileHeader2;
 		public byte bTileHeader3;
@@ -324,7 +_,7 @@
 			if (color > 30)
 				color = 30;
 
-			sTileHeader = (short)(sTileHeader & 65504 | color);
+			sTileHeader = (ushort)(sTileHeader & 65504 | color);
 		}
 
 		public bool active() => (sTileHeader & 32) == 32;
@@ -335,7 +_,7 @@
 				return;
 			}
 
-			sTileHeader = (short)(sTileHeader & 65503);
+			sTileHeader = (ushort)(sTileHeader & 65503);
 		}
 
 		public bool inActive() => (sTileHeader & 64) == 64;
@@ -346,7 +_,7 @@
 				return;
 			}
 
-			sTileHeader = (short)(sTileHeader & 65471);
+			sTileHeader = (ushort)(sTileHeader & 65471);
 		}
 
 		public bool wire() => (sTileHeader & 128) == 128;
@@ -357,7 +_,7 @@
 				return;
 			}
 
-			sTileHeader = (short)(sTileHeader & 65407);
+			sTileHeader = (ushort)(sTileHeader & 65407);
 		}
 
 		public bool wire2() => (sTileHeader & 256) == 256;
@@ -368,7 +_,7 @@
 				return;
 			}
 
-			sTileHeader = (short)(sTileHeader & 65279);
+			sTileHeader = (ushort)(sTileHeader & 65279);
 		}
 
 		public bool wire3() => (sTileHeader & 512) == 512;
@@ -379,7 +_,7 @@
 				return;
 			}
 
-			sTileHeader = (short)(sTileHeader & 65023);
+			sTileHeader = (ushort)(sTileHeader & 65023);
 		}
 
 		public bool halfBrick() => (sTileHeader & 1024) == 1024;
@@ -390,7 +_,7 @@
 				return;
 			}
 
-			sTileHeader = (short)(sTileHeader & 64511);
+			sTileHeader = (ushort)(sTileHeader & 64511);
 		}
 
 		public bool actuator() => (sTileHeader & 2048) == 2048;
@@ -401,13 +_,13 @@
 				return;
 			}
 
-			sTileHeader = (short)(sTileHeader & 63487);
+			sTileHeader = (ushort)(sTileHeader & 63487);
 		}
 
 		public byte slope() => (byte)((sTileHeader & 28672) >> 12);
 
 		public void slope(byte slope) {
-			sTileHeader = (short)(sTileHeader & 36863 | (slope & 7) << 12);
+			sTileHeader = (ushort)(sTileHeader & 36863 | (slope & 7) << 12);
 		}
 
 		public static void SmoothSlope(int x, int y, bool applyToNeighbors = true) {
